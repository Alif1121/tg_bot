from flask import Flask, request
from telegram import Update, Bot, Poll
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, filters

TOKEN = "YOUR_BOT_TOKEN_HERE"
bot = Bot(token=TOKEN)
app = Flask(__name__)

dispatcher = Dispatcher(bot, None, workers=0)

def parse_full_format(text):
    lines = text.strip().split("\n")
    question = ""
    explanation = ""
    options = []
    answer_index = None
    for line in lines:
        if line.startswith("‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® -"):
            question = line.replace("‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® -", "").strip()
        elif line.startswith("‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡¶æ -"):
            explanation = line.replace("‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡¶æ -", "").strip()
        elif line.strip() and line[0].isdigit() and "." in line:
            options.append(line.split(". ", 1)[1])
        elif line.startswith("‡¶â‡¶§‡ßç‡¶§‡¶∞ -"):
            try:
                answer_index = int(line.replace("‡¶â‡¶§‡ßç‡¶§‡¶∞ -", "").strip()) - 1
            except:
                answer_index = None
    if question and options and answer_index is not None and 0 <= answer_index < len(options):
        return question, options, answer_index, explanation
    else:
        return None, None, None, None

def start(update, context):
    update.message.reply_text(
        "üëã ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶á ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶ì:\n\n"
        "‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® - ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶≤‡¶ø‡¶ñ‡ßã\n"
        "‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡¶æ - ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßã (‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï)\n"
        "‡ßß. ‡¶Ö‡¶™‡¶∂‡¶® ‡ßß\n"
        "‡ß®. ‡¶Ö‡¶™‡¶∂‡¶® ‡ß®\n"
        "‡ß©. ‡¶Ö‡¶™‡¶∂‡¶® ‡ß©\n"
        "‡ß™. ‡¶Ö‡¶™‡¶∂‡¶® ‡ß™\n"
        "‡¶â‡¶§‡ßç‡¶§‡¶∞ - ‡¶∏‡¶†‡¶ø‡¶ï ‡¶Ö‡¶™‡¶∂‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞\n\n"
        "‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:\n"
        "‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® - ‡¶Æ‡ßÅ‡¶ï‡ßç‡¶§‡¶ø‡¶Ø‡ßÅ‡¶¶‡ßç‡¶ß ‡¶ï‡¶¨‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡ßü?\n"
        "‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡¶æ - ‡¶è‡¶ü‡¶ø ‡¶õ‡¶ø‡¶≤ ‡¶™‡¶æ‡¶ï‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶®‡¶ø ‡¶∂‡¶æ‡¶∏‡¶®‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∞‡ßÅ‡¶¶‡ßç‡¶ß‡ßá ‡¶Ø‡ßÅ‡¶¶‡ßç‡¶ß‡•§\n"
        "‡ßß. ‡ßß‡ßØ‡ß¨‡ßØ\n"
        "‡ß®. ‡ßß‡ßØ‡ß≠‡ßß\n"
        "‡ß©. ‡ßß‡ßØ‡ß≠‡ß´\n"
        "‡ß™. ‡ßß‡ßØ‡ß≠‡ß¶\n"
        "‡¶â‡¶§‡ßç‡¶§‡¶∞ - ‡ß®"
    )

def quiz_handler(update, context):
    text = update.message.text
    question, options, correct_index, explanation = parse_full_format(text)
    if question and options and correct_index is not None:
        context.bot.send_poll(
            chat_id=update.effective_chat.id,
            question=question,
            options=options,
            type=Poll.QUIZ,
            correct_option_id=correct_index,
            is_anonymous=False,
        )
        update.message.reply_text(
            f"‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞: {correct_index + 1}. {options[correct_index]}\nüìò ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡¶æ: {explanation if explanation else '‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø‡•§'}"
        )
    else:
        update.message.reply_text("‚ùå ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶†‡¶ø‡¶ï ‡¶®‡ßü‡•§ ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®, ‡¶Ö‡¶™‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶æ‡¶ì‡•§")

dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), quiz_handler))

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "OK"

@app.route("/")
def index():
    return "Bot is running!"

if __name__ == "__main__":
    app.run()
